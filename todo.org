* ---1---
* fib
** add rec macro
*** compile all args
*** go to label
* add bench macro
** run 1+3
** print runtime
* ---2---
* emit +/- as inc/dec if lit arg
* add file loading to alang
** load all args
* add String type/parser
* add str binding
* add Chan
** add Chan type
** use deque
** finish thread test
*** prod/cons/queue
* add Iter type
** add types::iter method
** add Iter type
** add Iter op
** add Next op
*** peek iter && push next value or NIL
** add Stack iter
* add trace support
* ---N---
* add tasks
** use Pause to switch
** separate stacks
** add StartTask op
** add Snooze op

let fib sub(
  if (.< 2) _ (
    .- 1 cp rec()
    .+ (sw .- 1 rec())
  )
)

fib(20)
